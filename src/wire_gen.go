// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package main

import (
	"github.com/jinzhu/gorm"
	"krisha/src/internal"
	"krisha/src/internal/repo"
	"krisha/src/internal/service/apartments"
	"krisha/src/internal/service/api"
	"krisha/src/internal/service/parser"
	"krisha/src/internal/service/tg"
	"krisha/src/tghttp"
)

// Injectors from di.go:

func InitServices(db *gorm.DB) *Services {
	apsCacheService := apartments.NewApsCacheService()
	apsLoggerService := apartments.NewApsLoggerService()
	tgService := tg.NewTgService()
	apsTgSenderService := apartments.NewApsTgSenderService(tgService)
	krishaClientService := api.NewKrishaClientService(tgService)
	parserSettingsRepository := repo.NewParserSettingsRepository(db)
	factory := parser.NewParserFactory(tgService, krishaClientService)
	service := parser.NewParserService(parserSettingsRepository, tgService, factory, krishaClientService)
	allowedChatRepository := repo.NewAllowedChatRepository(db)
	permissionsService := internal.NewPermissionsService(allowedChatRepository)
	tgInteractor := tghttp.NewTgInteractor(tgService, service, permissionsService)
	services := NewServices(apsCacheService, apsLoggerService, apsTgSenderService, krishaClientService, service, tgService, tgInteractor, factory)
	return services
}
